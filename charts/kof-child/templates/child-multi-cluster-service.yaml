apiVersion: k0rdent.mirantis.com/v1beta1
kind: MultiClusterService
metadata:
  name: kof-child-cluster
spec:
  clusterSelector:
    matchLabels:
      k0rdent.mirantis.com/kof-cluster-role: child
    matchExpressions:
      - key: "k0rdent.mirantis.com/istio-role"
        operator: DoesNotExist

  serviceSpec:
    services:

      {{- if (index .Values "cert-manager" "enabled") }}
      - name: cert-manager
        namespace: {{ .Release.Namespace }}
        template: cert-manager-1-16-4
        values: |
          crds:
            enabled: true
      {{- end }}

      - name: kof-operators
        namespace: {{ .Release.Namespace }}
        template: kof-operators-{{ .Chart.Version | replace "." "-" }}

      - name: kof-collectors
        namespace: {{ .Release.Namespace }}
        template: kof-collectors-{{ .Chart.Version | replace "." "-" }}
        values: |
          {{`{{ $childClusterName := .Cluster.metadata.name }}`}}
          {{`{{ $writeMetricsEndpoint := getField "ChildConfig" "data.write_metrics_endpoint" }}`}}
          {{`{{ $readMetricsEndpoint := getField "ChildConfig" "data.read_metrics_endpoint" }}`}}
          {{`{{ $logsEndpoint := getField "ChildConfig" "data.write_logs_endpoint" }}`}}
          {{`{{ $tracesEndpoint := getField "ChildConfig" "data.write_traces_endpoint" }}`}}
          {{`{{ $collectorsValuesFromAnnotation := index .Cluster.metadata.annotations "k0rdent.mirantis.com/kof-collectors-values" | default "{}" | fromYaml }}`}}
          {{`{{`}} $collectorsValuesFromHelm := `{{ .Values.collectors | toYaml | nindent 10 }}` | fromYaml {{`}}`}}
          {{`{{ $vmUser := getField "VmUserSecret" "data.username" | b64dec }}`}}
          {{`{{ $vmPassword := getField "VmUserSecret" "data.password" | b64dec }}`}}
          {{`{{`}} $collectorsValuesHere := printf `
          global:
            cluster: %q
            clusterLabel: cluster
          opentelemetry-kube-stack:
            defaultCRConfig:
              config:
                processors:
                  resource/k8sclustername:
                    attributes:
                    - action: insert
                      key: k8s.cluster.name
                      value: %q
                extensions:
                  basicauth/logs:
                    client_auth:
                      username: %q
                      password: %q
                  basicauth/metrics:
                    client_auth:
                      username: %q
                      password: %q
                exporters:
                  debug: {}
                  otlphttp/traces:
                    endpoint: %q
                  otlphttp/logs:
                    auth:
                      authenticator: basicauth/logs
                    logs_endpoint: %q
                  prometheusremotewrite:
                    external_labels:
                      cluster: %q
                    auth:
                      authenticator: basicauth/metrics
                    endpoint: %q
          opencost:
            opencost:
              prometheus:
                external:
                  url: %q
              exporter:
                defaultClusterId: %q
            ` $childClusterName $childClusterName $vmUser $vmPassword $vmUser $vmPassword $tracesEndpoint $logsEndpoint $childClusterName $writeMetricsEndpoint $readMetricsEndpoint $childClusterName | fromYaml {{`}}`}}
          {{`{{ mergeOverwrite $collectorsValuesHere $collectorsValuesFromHelm $collectorsValuesFromAnnotation | toYaml | nindent 4 }}`}}
    templateResourceRefs:
    - identifier: ChildConfig
      resource:
        apiVersion: v1
        kind: ConfigMap
        name: kof-cluster-config-{{`{{ .Cluster.metadata.name }}`}}
        namespace: "{{`{{ .Cluster.metadata.namespace }}`}}"
    - resource:
        apiVersion: v1
        kind: Secret
        name: storage-vmuser-credentials
        namespace: kof-storage
      identifier: VmUserSecret 
    - resource:
        apiVersion: cluster.x-k8s.io/v1beta1
        kind: Cluster
        name: "{{`{{ .Cluster.metadata.name }}`}}"
        namespace: "{{`{{ .Cluster.metadata.namespace }}`}}"
      identifier: MyCluster

