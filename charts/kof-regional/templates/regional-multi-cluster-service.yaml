apiVersion: k0rdent.mirantis.com/v1beta1
kind: MultiClusterService
metadata:
  name: kof-regional-cluster
spec:
  clusterSelector:
    matchLabels:
      k0rdent.mirantis.com/kof-cluster-role: regional
    matchExpressions:
      - key: "k0rdent.mirantis.com/istio-role"
        operator: DoesNotExist

  serviceSpec:
    services:
      {{- if (index .Values "cert-manager" "enabled") }}
      - name: cert-manager
        namespace: {{ .Release.Namespace }}
        template: cert-manager-1-16-4
        values: |
          crds:
            enabled: true
      {{- end }}

      {{- if (index .Values "ingress-nginx" "enabled") }}
      - name: ingress-nginx
        namespace: {{ .Release.Namespace }}
        template: ingress-nginx-4-12-1
        values: |
          {{`{{ if eq .InfrastructureProvider.kind "AzureCluster" }}`}}
          # Workaround for https://github.com/k0rdent/kcm/issues/1119#issuecomment-2721512663
          controller:
            service:
              annotations:
                service.beta.kubernetes.io/azure-load-balancer-health-probe-request-path: /healthz
          {{`{{ end }}`}}
      {{- end }}

      - name: kof-storage
        namespace: {{ .Release.Namespace }}
        template: kof-storage-{{ .Chart.Version | replace "." "-" }}
        values: |
          {{`{{ $storageClass := index .Cluster.metadata.annotations "k0rdent.mirantis.com/kof-storage-class" | default "" }}`}}
          {{`{{ $regionalDomain := index .Cluster.metadata.annotations "k0rdent.mirantis.com/kof-regional-domain" }}`}}
          {{`{{ $tracesEnabled := not (index .Cluster.metadata.annotations "k0rdent.mirantis.com/kof-write-traces-endpoint") }}`}}
          {{`{{ $tracesHost := $tracesEnabled | ternary (printf "jaeger.%s" $regionalDomain) "" }}`}}
          {{`{{ $metricsEnabled := not (index .Cluster.metadata.annotations "k0rdent.mirantis.com/kof-write-metrics-endpoint") }}`}}
          {{`{{ $metricsHost := $metricsEnabled | ternary (printf "vmauth.%s" $regionalDomain) "" }}`}}
          {{`{{ $grafanaHost := printf "grafana.%s" $regionalDomain }}`}}
          {{`{{ $storageValuesFromAnnotation := index .Cluster.metadata.annotations "k0rdent.mirantis.com/kof-storage-values" | default "{}" | fromYaml }}`}}
          {{`{{`}} $storageValuesFromHelm := `{{ .Values.storage | toYaml | nindent 10 }}` | fromYaml {{`}}`}}
          {{`{{`}} $storageValuesHere := printf `
          global:
            storageClass: %q
          victoria-logs-cluster:
            vlstorage:
              persistentVolume:
                storageClassName: %q
          external-dns:
            enabled: true
          jaeger:
            ingress:
              enabled: %t
              host: %q
          victoriametrics:
            vmauth:
              ingress:
                enabled: %t
                host: %q
          grafana:
            ingress:
              host: %q
          ` $storageClass $storageClass $tracesEnabled $tracesHost $metricsEnabled $metricsHost $grafanaHost | fromYaml {{`}}`}}
          {{`{{`}} mergeOverwrite $storageValuesHere $storageValuesFromHelm $storageValuesFromAnnotation | toYaml | nindent 4 {{`}}`}}

      - name: kof-operators
        namespace: {{ .Release.Namespace }}
        template: kof-operators-{{ .Chart.Version | replace "." "-" }}
        values: |
          {{`{{ $operatorsValuesFromAnnotation := index .Cluster.metadata.annotations "k0rdent.mirantis.com/kof-operators-values" | default "{}" | fromYaml }}`}}
          {{`{{`}} $operatorsValuesFromHelm := `{{ .Values.operators | toYaml | nindent 10 }}` | fromYaml {{`}}`}}
          {{`{{`}} $operatorsValuesHere :=` {} `| fromYaml {{`}}`}}
          {{`{{ mergeOverwrite $operatorsValuesHere $operatorsValuesFromHelm $operatorsValuesFromAnnotation | toYaml | nindent 4 }}`}}

      - name: kof-collectors
        namespace: {{ .Release.Namespace }}
        template: kof-collectors-{{ .Chart.Version | replace "." "-" }}
        values: |
          {{`{{ $collectorsValuesFromAnnotation := index .Cluster.metadata.annotations "k0rdent.mirantis.com/kof-collectors-values" | default "{}" | fromYaml }}`}}
          {{`{{`}} $collectorsValuesFromHelm := `{{ .Values.collectors | toYaml | nindent 10 }}` | fromYaml {{`}}`}}
          {{`{{ $vmUser := getField "VmUserSecret" "data.username" | b64dec }}`}}
          {{`{{ $vmPassword := getField "VmUserSecret" "data.password" | b64dec }}`}}
          {{`{{`}} $collectorsValuesHere := printf `
          opentelemetry-kube-stack:
            defaultCRConfig:
              config:
                processors:
                  resource/k8sclustername:
                    attributes:
                    - action: insert
                      key: k8s.cluster.name
                      value: %q
                extensions:
                  basicauth/logs:
                    client_auth:
                      username: %q
                      password: %q
                  basicauth/metrics:
                    client_auth:
                      username: %q
                      password: %q
                exporters:
                  debug: {}
                  otlphttp/traces:
                    endpoint: http://kof-storage-jaeger-collector.kof-storage:4318
                    tls:
                      insecure: true
                  otlphttp/logs:
                    auth:
                      authenticator: basicauth/logs
                    logs_endpoint: http://kof-storage-victoria-logs-cluster-vlinsert.kof-storage:9481/insert/opentelemetry/v1/logs
                    tls:
                      insecure: true
                  prometheusremotewrite:
                    external_labels:
                      cluster: %q
                    auth:
                      authenticator: basicauth/metrics
                    tls:
                      insecure: true
                    endpoint: http://vminsert-cluster.kof-storage:8480/insert/0/prometheus/api/v1/write
          global:
            clusterLabel: cluster
            cluster: %q
          opencost:
            opencost:
              exporter:
                defaultClusterId: %q
          ` .Cluster.metadata.name $vmUser $vmPassword $vmUser $vmPassword .Cluster.metadata.name .Cluster.metadata.name .Cluster.metadata.name | fromYaml  {{`}}`}}
          {{`{{`}} mergeOverwrite $collectorsValuesHere $collectorsValuesFromHelm $collectorsValuesFromAnnotation | toYaml | nindent 4 {{`}}`}}
    templateResourceRefs:
      - resource:
          apiVersion: v1
          kind: Secret
          name: storage-vmuser-credentials
          namespace: kof-storage
        identifier: VmUserSecret
      - resource:
          apiVersion: cluster.x-k8s.io/v1beta1
          kind: Cluster
          name: "{{`{{ .Cluster.metadata.name }}`}}"
          namespace: "{{`{{ .Cluster.metadata.namespace }}`}}"
        identifier: MyCluster

